buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
    }
}

apply plugin: "maven-publish"
apply plugin: "java"

apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'



group = 'com.developerb.nmxmlp'
version = '1.5.0'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    options.encoding = 'UTF-8'
    options.compilerArgs = [
            "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
            "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
            "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
            "-Xlint:fallthrough", "-Xlint:rawtypes",
            "-Xlint:unchecked", "-Xlint:-options", "-Werror"
    ]
}

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    options.encoding = 'UTF-8'
    options.compilerArgs = [
            "-Xlint:varargs", "-Xlint:cast", "-Xlint:classfile",
            "-Xlint:dep-ann", "-Xlint:divzero", "-Xlint:empty", "-Xlint:finally",
            "-Xlint:overrides", "-Xlint:path", "-Xlint:processing", "-Xlint:static",
            "-Xlint:-fallthrough", "-Xlint:-rawtypes", "-Xlint:-deprecation",
            "-Xlint:-unchecked", "-Xlint:-options"
    ]
}

repositories {
    jcenter()
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

dependencies {
    implementation 'com.google.guava:guava:28.0-jre'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.assertj:assertj-core:3.13.2'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

test {
    useJUnitPlatform()
}



publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/kimble/nmxmlp")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
